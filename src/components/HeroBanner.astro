---
// Hero images with vertical offset for logo positioning
// offset: percentage from top (50 = center, 30 = higher, 70 = lower)
const bannerImages = [
  { src: '/banners/midnight.jpg', offset: 50 },
  { src: '/banners/lego-drive.jpg', offset: 40 },
  { src: '/banners/xcom2.jpg', offset: 50 },
  { src: '/banners/pga23.jpg', offset: 60 },
  { src: '/banners/chimera.jpg', offset: 50 },
  { src: '/banners/evolve.jpg', offset: 45 },
];
---

<section class="relative h-[33vh] min-h-[250px] max-h-[350px] overflow-hidden">
  <!-- Background images container -->
  <div class="absolute inset-0">
    {bannerImages.map((img, i) => (
      <div
        data-slide={i}
        data-offset={img.offset}
        class={`absolute inset-0 opacity-0 transition-opacity duration-1000 ${i === 0 ? 'opacity-100' : ''}`}
      >
        <img
          src={img.src}
          alt=""
          class="w-full h-full object-cover"
          style={`object-position: center ${img.offset}%`}
          loading={i === 0 ? "eager" : "lazy"}
        />
        <!-- Gradient overlay for text readability -->
        <div class="absolute inset-0 bg-gradient-to-b from-background/70 via-background/40 to-background/90"></div>
      </div>
    ))}
  </div>

  <!-- Text content -->
  <div class="relative h-full flex items-center justify-center">
    <div class="text-center px-4">
      <!-- Loading animation that transitions to tagline -->
      <h2 class="text-2xl md:text-3xl lg:text-4xl font-bold font-display drop-shadow-[0_6px_16px_rgba(0,0,0,1)]">
        <span id="animated-text" class="inline-block">Loading</span>
      </h2>
    </div>
  </div>
</section>

<script>
  // Image rotation
  const slides = document.querySelectorAll('[data-slide]');
  let currentSlide = 0;

  function nextSlide() {
    slides[currentSlide].classList.remove('opacity-100');
    slides[currentSlide].classList.add('opacity-0');

    currentSlide = (currentSlide + 1) % slides.length;

    slides[currentSlide].classList.remove('opacity-0');
    slides[currentSlide].classList.add('opacity-100');
  }

  // Rotate images every 4 seconds
  setInterval(nextSlide, 4000);

  // Text animation
  const textElement = document.getElementById('animated-text');
  const loadingText = 'Loading';
  const finalText = 'Serious technology. Stupid games.';

  // Animate dots faster
  let dots = 0;
  const dotInterval = setInterval(() => {
    dots++;
    if (dots <= 3) {
      textElement.textContent = loadingText + '.'.repeat(dots);
    }
  }, 250);

  // After dots complete, start typewriter effect
  setTimeout(() => {
    clearInterval(dotInterval);

    // Start overwriting from the beginning
    let currentText = loadingText + '...';
    let currentIndex = 0;

    const typeInterval = setInterval(() => {
      if (currentIndex < finalText.length) {
        // Build the new text character by character
        currentText = finalText.substring(0, currentIndex + 1) + currentText.substring(currentIndex + 1);

        // Apply colors to the text
        const seriousPart = finalText.substring(0, 19); // "Serious technology."
        const stupidPart = finalText.substring(19); // " Stupid games."

        if (currentIndex < 19) {
          textElement.innerHTML = `<span class="text-accent-bright">${currentText.substring(0, currentIndex + 1)}</span>${currentText.substring(currentIndex + 1)}`;
        } else {
          textElement.innerHTML = `<span class="text-accent-bright">${seriousPart}</span><span class="text-accent">${currentText.substring(19, currentIndex + 1)}</span>${currentText.substring(currentIndex + 1)}`;
        }

        currentIndex++;
      } else {
        // Final state - ensure proper colors
        textElement.innerHTML = `<span class="text-accent-bright">Serious technology.</span> <span class="text-accent">Stupid games.</span>`;
        clearInterval(typeInterval);
      }
    }, 60);
  }, 1000);
</script>