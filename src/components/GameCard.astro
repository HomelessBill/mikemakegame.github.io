---
export interface Props {
  title: string;
  subtitle?: string;
  status?: 'coming-soon' | 'early-access' | 'released';
  steamUrl?: string;
  trailer?: string;
  description?: string;
  descriptionHeading?: string;
  features?: string[];
  featuresHeading?: string;
  screenshots?: string[];
  coverImage?: string;
  logoImage?: string;
  trailerBlurb?: string;
  discordUrl?: string;
  twitterUrl?: string;
  youtubeUrl?: string;
}

const {
  title,
  subtitle = '',
  status = 'coming-soon',
  steamUrl,
  trailer,
  description,
  descriptionHeading = 'About',
  features = [],
  featuresHeading = 'Key Features',
  screenshots = [],
  coverImage,
  logoImage,
  trailerBlurb,
  discordUrl,
  twitterUrl,
  youtubeUrl
} = Astro.props;

const statusBadges = {
  'coming-soon': 'Coming Soon',
  'early-access': 'Early Access',
  'released': 'Available Now'
};
---

<div class="game-card">
  <!-- Cover Image -->
  {coverImage && (
    <div class="mb-8 flex justify-center">
      <img
        src={coverImage}
        alt={`${title} cover`}
        class="rounded-lg max-w-2xl w-full h-auto border border-accent/20"
      />
    </div>
  )}

  <!-- Header with title/logo and status -->
  <div class="mb-8 text-center">
    {logoImage ? (
      <div class="mb-3 flex justify-center px-4">
        <img
          src={logoImage}
          alt={title}
          class="w-full max-w-full sm:max-w-xl md:max-w-4xl max-h-32 sm:max-h-48 md:max-h-[32rem] h-auto object-contain"
        />
      </div>
    ) : (
      <h3 class="text-3xl md:text-4xl font-display mb-3">{title}</h3>
    )}
    {subtitle && <p class="text-xl text-foreground-muted mb-4">{subtitle}</p>}

    <div class="flex flex-wrap gap-3 justify-center items-center mb-2">
      {steamUrl && (
        <a
          href={steamUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-2 px-6 py-3 bg-accent/90 hover:bg-accent text-background rounded-lg transition-colors duration-200 font-bold"
        >
          <svg class="w-5 h-5" viewBox="0 0 256 259" fill="currentColor">
            <path d="M127.779 0C60.42 0 5.24 52.412 0 119.014l68.724 28.674a35.812 35.812 0 0 1 20.426-6.366c.682 0 1.356.019 2.02.056l30.566-44.71v-.626c0-26.903 21.69-48.796 48.353-48.796 26.662 0 48.352 21.893 48.352 48.796 0 26.902-21.69 48.804-48.352 48.804-.37 0-.73-.009-1.098-.018l-43.593 31.377c.028.582.046 1.163.046 1.735 0 20.204-16.283 36.636-36.294 36.636-17.566 0-32.263-12.658-35.584-29.412L4.41 163.646c11.328 54.137 59.307 94.806 116.313 94.806 65.4 0 118.778-53.515 118.778-119.207C239.51 61.756 193.749 0 127.779 0zM80.352 196.332l-15.749-6.568c2.787 5.867 7.621 10.775 14.033 13.47 13.857 5.83 29.836-.803 35.612-14.799a27.555 27.555 0 0 0 .046-21.035c-2.768-6.79-7.999-12.086-14.706-14.909-6.67-2.795-13.811-2.694-20.085-.304l16.275 6.79c10.222 4.3 15.056 16.145 10.794 26.461-4.253 10.314-15.998 15.195-26.22 10.894zm89.741-101.48c0-17.925-14.457-32.52-32.217-32.52-17.769 0-32.226 14.595-32.226 32.52 0 17.926 14.457 32.512 32.226 32.512 17.76 0 32.217-14.586 32.217-32.512zm-56.37-.008c0-13.47 10.84-24.43 24.153-24.43 13.304 0 24.144 10.96 24.144 24.43 0 13.468-10.84 24.418-24.144 24.418-13.313 0-24.153-10.95-24.153-24.418z"/>
          </svg>
          Follow and Wishlist on Steam
        </a>
      )}
    </div>
  </div>

  <!-- Main content area - Side by side on desktop, stacked on mobile -->
  <div class="grid md:grid-cols-5 gap-8 mb-8">
    <!-- Trailer - 60% width on desktop -->
    <div class="md:col-span-3 space-y-4">
      <div class="aspect-video bg-background-alt rounded-lg overflow-hidden border border-accent/20" id="trailer-container">
        {trailer && (
          <iframe
            id="trailer-iframe"
            src={trailer}
            class="w-full h-full hidden"
            frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
          />
        )}
        <div id="trailer-placeholder" class="w-full h-full flex items-center justify-center text-foreground-muted">
          <div class="text-center">
            <svg class="w-16 h-16 mx-auto mb-2 opacity-50" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"/>
            </svg>
            <p class="text-sm">Trailer Coming Soon</p>
          </div>
        </div>
      </div>

      {/* Blurb and social links inline */}
      {(trailerBlurb || discordUrl || twitterUrl || youtubeUrl) && (
        <div class="flex flex-wrap items-center gap-3">
          {trailerBlurb && (
            <span class="text-foreground-muted text-sm leading-relaxed flex-1">
              {trailerBlurb}
            </span>
          )}

          {discordUrl && (
            <a
              href={discordUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-background-alt border border-accent/20 hover:border-accent/40 rounded-lg transition-colors text-sm whitespace-nowrap"
            >
              <svg class="w-5 h-5" viewBox="0 0 127.14 96.36" fill="currentColor">
                <path d="M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z"/>
              </svg>
              Discord
            </a>
          )}
          {twitterUrl && (
            <a
              href={twitterUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-background-alt border border-accent/20 hover:border-accent/40 rounded-lg transition-colors text-sm whitespace-nowrap"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
              Twitter/X
            </a>
          )}
          {youtubeUrl && (
            <a
              href={youtubeUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center gap-2 px-4 py-2 bg-background-alt border border-accent/20 hover:border-accent/40 rounded-lg transition-colors text-sm whitespace-nowrap"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
              </svg>
              YouTube
            </a>
          )}
        </div>
      )}

      <!-- Screenshot Gallery -->
      {screenshots.length > 0 ? (
        <div class="overflow-x-auto pb-2 -mx-2 px-2">
          <div class="flex gap-2">
            {screenshots.slice(0, 5).map((screenshot, i) => (
              <div class="flex-none w-[calc(33.333%-0.5rem)] md:w-[calc(33.333%-0.5rem)] cursor-pointer screenshot-thumbnail">
                <img
                  src={screenshot}
                  alt={`${title} screenshot ${i + 1}`}
                  class="rounded-lg w-full h-auto object-cover border border-accent/20 hover:border-accent/60 transition-colors"
                  data-screenshot={screenshot}
                />
              </div>
            ))}
          </div>
        </div>
      ) : (
        <div class="aspect-video bg-background-alt rounded-lg border border-accent/20 flex items-center justify-center">
          <span class="text-xs text-foreground-muted opacity-50">Screenshots Coming Soon</span>
        </div>
      )}
    </div>

    <!-- Description and Features - 40% width on desktop -->
    <div class="md:col-span-2 space-y-6">
      {description && (
        <div>
          <h4 class="text-lg font-display mb-3 text-accent-bright">{descriptionHeading}</h4>
          <div class="text-foreground-muted leading-relaxed text-sm space-y-3">
            {description.split('\n\n').map(paragraph =>
              paragraph.trim() && <p>{paragraph.trim()}</p>
            )}
          </div>
        </div>
      )}

      {features.length > 0 && (
        <div>
          <h4 class="text-lg font-display mb-3 text-accent-bright">{featuresHeading}</h4>
          <ul class="space-y-2">
            {features.map(feature => (
              <li class="flex items-start gap-2 text-sm">
                <span class="text-accent mt-0.5">â–¸</span>
                <span class="text-foreground-muted">{feature}</span>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  </div>

</div>

<script>
  // Show trailer if available
  const trailerIframe = document.getElementById('trailer-iframe');
  const trailerPlaceholder = document.getElementById('trailer-placeholder');

  if (trailerIframe) {
    trailerIframe.classList.remove('hidden');
    if (trailerPlaceholder) {
      trailerPlaceholder.classList.add('hidden');
    }
  }

  // Screenshot overlay functionality
  const thumbnails = document.querySelectorAll('.screenshot-thumbnail img');

  // Create overlay element
  const overlay = document.createElement('div');
  overlay.className = 'fixed inset-0 bg-background/95 z-50 hidden items-center justify-center p-4 cursor-pointer';
  overlay.innerHTML = `
    <div class="relative max-w-[80vw] max-h-[80vh]">
      <img src="" alt="Screenshot" class="max-w-full max-h-[80vh] rounded-lg border border-accent/40" />
      <button class="absolute top-2 right-2 bg-background/90 hover:bg-background border border-accent/30 hover:border-accent/60 rounded-lg p-2 transition-colors" aria-label="Close">
        <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  `;
  document.body.appendChild(overlay);

  const overlayImg = overlay.querySelector('img');

  // Add click handlers to thumbnails
  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener('click', (e) => {
      e.stopPropagation();
      const screenshotSrc = thumbnail.dataset.screenshot;
      if (screenshotSrc) {
        overlayImg.src = screenshotSrc;
        overlayImg.alt = thumbnail.alt;
        overlay.classList.remove('hidden');
        overlay.classList.add('flex');
        document.body.style.overflow = 'hidden';
      }
    });
  });

  // Close overlay on click
  overlay.addEventListener('click', () => {
    overlay.classList.add('hidden');
    overlay.classList.remove('flex');
    document.body.style.overflow = '';
  });

  // Prevent closing when clicking the image
  overlayImg.addEventListener('click', (e) => {
    e.stopPropagation();
  });
</script>
